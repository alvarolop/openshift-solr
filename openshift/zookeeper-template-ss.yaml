apiVersion: v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}
  annotations:
    description: Template for the application
    tags: app,java,zookeeper
    iconClass: icon-rh-openjdk
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
labels:
  template: ${APPLICATION_NAME}
  app: ${APPLICATION_NAME}
objects:

###########
# HEADLESS SERVICE
###########
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    name: "${APPLICATION_NAME}-0-server"
    labels:
      component: "${APPLICATION_NAME}-0"
  spec:
    ports:
      - port: 2888
        name: server
        protocol: TCP
      - port: 3888
        name: leader-election
        protocol: TCP
    selector:
      component: "${APPLICATION_NAME}-0"
      statefulset: "${APPLICATION_NAME}"
    clusterIP: None
    sessionAffinity: None
    publishNotReadyAddresses: true
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    name: "${APPLICATION_NAME}-1-server"
    labels:
      component: "${APPLICATION_NAME}-1"
  spec:
    ports:
      - port: 2888
        name: server
        protocol: TCP
      - port: 3888
        name: leader-election
        protocol: TCP
    selector:
      component: "${APPLICATION_NAME}-1"
      statefulset: "${APPLICATION_NAME}"
    clusterIP: None
    sessionAffinity: None
    publishNotReadyAddresses: true
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    name: "${APPLICATION_NAME}-2-server"
    labels:
      component: "${APPLICATION_NAME}-2"
  spec:
    ports:
      - port: 2888
        name: server
        protocol: TCP
      - port: 3888
        name: leader-election
        protocol: TCP
    selector:
      component: "${APPLICATION_NAME}-2"
      statefulset: "${APPLICATION_NAME}"
    clusterIP: None
    sessionAffinity: None
    publishNotReadyAddresses: true



###########
# CLIENT SERVICE
###########
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-0"
    labels:
      component: "${APPLICATION_NAME}-0"
  spec:
    ports:
      - port: 2181
        name: client
        protocol: TCP
    selector:
      component: "${APPLICATION_NAME}-0"
      statefulset: "${APPLICATION_NAME}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-1"
    labels:
      component: "${APPLICATION_NAME}-1"
  spec:
    ports:
      - port: 2181
        name: client
        protocol: TCP
    selector:
      component: "${APPLICATION_NAME}-1"
      statefulset: "${APPLICATION_NAME}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-2"
    labels:
      component: "${APPLICATION_NAME}-2"
  spec:
    ports:
      - port: 2181
        name: client
        protocol: TCP
    selector:
      component: "${APPLICATION_NAME}-2"
      statefulset: "${APPLICATION_NAME}"


###########
# STATEFUL SETS
###########
- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    name: "${APPLICATION_NAME}-0"
    labels:
      component: "${APPLICATION_NAME}-0"
      statefulset: "${APPLICATION_NAME}"
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: "${APPLICATION_NAME}-0"
        statefulset: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          component: "${APPLICATION_NAME}-0"
          statefulset: "${APPLICATION_NAME}"
      spec:
        containers:
        - name: "${APPLICATION_NAME}"
          image: "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${APPLICATION_NAME}:${IMAGE_TAG}"
          env:
            # https://hub.docker.com/_/zookeeper
            - name: "ZOO_MY_ID"
              value: "0"
            - name: "ZOO_STANDALONE_ENABLED"
              value: "false"
            - name: "ZOO_SERVERS"
              value: "server.0=${APPLICATION_NAME}-0-server:2888:3888;2181 server.1=${APPLICATION_NAME}-1-server:2888:3888;2181 server.2=${APPLICATION_NAME}-2-server:2888:3888;2181"
          ports:
          - containerPort: 2181
            protocol: TCP
          - containerPort: 2888
            protocol: TCP
          - containerPort: 3888
            protocol: TCP
          imagePullPolicy: Always
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "zkServer.sh status"
            initialDelaySeconds: ${{INITIAL_DELAY_SECONDS}}
            periodSeconds: 30
            timeoutSeconds: 10
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "zkServer.sh status"
            initialDelaySeconds: ${{INITIAL_DELAY_SECONDS}}
            periodSeconds: 30
            timeoutSeconds: 10
          resources:
            limits:
              cpu: "${{CPU_LIMIT}}"
              memory: "${{MEMORY_LIMIT}}"
            requests:
              cpu: "${{CPU_REQUEST}}"
              memory: "${{MEMORY_REQUEST}}"
          volumeMounts:
          - name: "${APPLICATION_NAME}-data"
            mountPath: "${{MOUNT_PATH_DATA}}"
            subPath: "${APPLICATION_NAME}-0"
          - name: "${APPLICATION_NAME}-datalog"
            mountPath: "${{MOUNT_PATH_DATALOG}}"
            subPath: "${APPLICATION_NAME}-0"
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        securityContext: {}
        volumes:
        - name: "${APPLICATION_NAME}-data"
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-data"
        - name: "${APPLICATION_NAME}-datalog"
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-datalog"

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    name: "${APPLICATION_NAME}-1"
    labels:
      component: "${APPLICATION_NAME}-1"
      statefulset: "${APPLICATION_NAME}"
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: "${APPLICATION_NAME}-1"
        statefulset: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          component: "${APPLICATION_NAME}-1"
          statefulset: "${APPLICATION_NAME}"
      spec:
        containers:
        - name: "${APPLICATION_NAME}"
          image: "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${APPLICATION_NAME}:${IMAGE_TAG}"
          env:
            # https://hub.docker.com/_/zookeeper
            - name: "ZOO_MY_ID"
              value: "1"
            - name: "ZOO_STANDALONE_ENABLED"
              value: "false"
            - name: "ZOO_SERVERS"
              value: "server.0=${APPLICATION_NAME}-0-server:2888:3888;2181 server.1=${APPLICATION_NAME}-1-server:2888:3888;2181 server.2=${APPLICATION_NAME}-2-server:2888:3888;2181"
          ports:
          - containerPort: 2181
            protocol: TCP
          - containerPort: 2888
            protocol: TCP
          - containerPort: 3888
            protocol: TCP
          imagePullPolicy: Always
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "zkServer.sh status"
            initialDelaySeconds: ${{INITIAL_DELAY_SECONDS}}
            periodSeconds: 30
            timeoutSeconds: 10
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "zkServer.sh status"
            initialDelaySeconds: ${{INITIAL_DELAY_SECONDS}}
            periodSeconds: 30
            timeoutSeconds: 10
          resources:
            limits:
              cpu: "${{CPU_LIMIT}}"
              memory: "${{MEMORY_LIMIT}}"
            requests:
              cpu: "${{CPU_REQUEST}}"
              memory: "${{MEMORY_REQUEST}}"
          volumeMounts:
          - name: "${APPLICATION_NAME}-data"
            mountPath: "${{MOUNT_PATH_DATA}}"
            subPath: "${APPLICATION_NAME}-1"
          - name: "${APPLICATION_NAME}-datalog"
            mountPath: "${{MOUNT_PATH_DATALOG}}"
            subPath: "${APPLICATION_NAME}-1"
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        securityContext: {}
        volumes:
        - name: "${APPLICATION_NAME}-data"
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-data"
        - name: "${APPLICATION_NAME}-datalog"
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-datalog"

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    name: "${APPLICATION_NAME}-2"
    labels:
      component: "${APPLICATION_NAME}-2"
      statefulset: "${APPLICATION_NAME}"
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: "${APPLICATION_NAME}-2"
        statefulset: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          component: "${APPLICATION_NAME}-2"
          statefulset: "${APPLICATION_NAME}"
      spec:
        containers:
        - name: "${APPLICATION_NAME}"
          image: "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${APPLICATION_NAME}:${IMAGE_TAG}"
          env:
            # https://hub.docker.com/_/zookeeper
            - name: "ZOO_MY_ID"
              value: "2"
            - name: "ZOO_STANDALONE_ENABLED"
              value: "false"
            - name: "ZOO_SERVERS"
              value: "server.0=${APPLICATION_NAME}-0-server:2888:3888;2181 server.1=${APPLICATION_NAME}-1-server:2888:3888;2181 server.2=${APPLICATION_NAME}-2-server:2888:3888;2181"
          ports:
          - containerPort: 2181
            protocol: TCP
          - containerPort: 2888
            protocol: TCP
          - containerPort: 3888
            protocol: TCP
          imagePullPolicy: Always
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "zkServer.sh status"
            initialDelaySeconds: ${{INITIAL_DELAY_SECONDS}}
            periodSeconds: 30
            timeoutSeconds: 10
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "zkServer.sh status"
            initialDelaySeconds: ${{INITIAL_DELAY_SECONDS}}
            periodSeconds: 30
            timeoutSeconds: 10
          resources:
            limits:
              cpu: "${{CPU_LIMIT}}"
              memory: "${{MEMORY_LIMIT}}"
            requests:
              cpu: "${{CPU_REQUEST}}"
              memory: "${{MEMORY_REQUEST}}"
          volumeMounts:
          - name: "${APPLICATION_NAME}-data"
            mountPath: "${{MOUNT_PATH_DATA}}"
            subPath: "${APPLICATION_NAME}-2"
          - name: "${APPLICATION_NAME}-datalog"
            mountPath: "${{MOUNT_PATH_DATALOG}}"
            subPath: "${APPLICATION_NAME}-2"
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        securityContext: {}
        volumes:
        - name: "${APPLICATION_NAME}-data"
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-data"
        - name: "${APPLICATION_NAME}-datalog"
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-datalog"


###########
# PVCs
###########
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-data"
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: "${{PERSISTENT_VOLUME_SIZE}}"
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-datalog"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${{PERSISTENT_VOLUME_SIZE}}"
parameters:
- name: APPLICATION_NAME
  displayName: Name
  description: The name of the application.
  required: true
  value: "zookeeper"
- name: IMAGE_NAMESPACE
  displayName: Image Namespace
  required: false
  description: The namespace of the OpenShift project containing the imagestream for the application.
  value: "solr"
- name: IMAGE_TAG
  displayName: Environment TAG name
  description: Tag of the solr image."
  value: "3.5.7"
  required: false
- name: PERSISTENT_VOLUME_SIZE
  displayName: Persistent Volume Size
  description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
  required: false
  value: "10Gi"
- name: INITIAL_DELAY_SECONDS
  displayName: Initial Delay Seconds
  description: Initial delay until the readiness and liveness probes start.
  required: false
  value: "30"
- name: CPU_REQUEST
  displayName: CPU Request
  description: CPU request.
  required: false
  value: "0.5"
- name: CPU_LIMIT
  displayName: CPU Limit
  description: CPU limit.
  required: false
  value: "4"
- name: MEMORY_REQUEST
  displayName: Memory Request
  description: Memory request.
  required: false
  value: "2048Mi"
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Memory limit.
  required: false
  value: "4096Mi"
- name: MOUNT_PATH_DATA
  displayName: Mount Path
  description: The path to mount the persistent volume.
  value: /data
  required: false
- name: MOUNT_PATH_DATALOG
  displayName: Mount Path
  description: The path to mount the persistent volume.
  value: /datalog
  required: false